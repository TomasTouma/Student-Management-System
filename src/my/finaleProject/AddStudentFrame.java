/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.finaleProject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.*;
import static my.val.ValidationAndCalculationMethods.*;
import java.sql.ResultSet;
import java.text.Format;
import java.text.SimpleDateFormat;

/**
 * The {@code AddStudentFrame} class represents a GUI form for admitting new
 * students into the system.
 * <p>
 * This frame allows the user to:
 * <ul>
 * <li>Automatically generate the next available student ID</li>
 * <li>Enter and validate student details (surname, PPSN, gender, etc.)</li>
 * <li>Select a course and its corresponding class group</li>
 * <li>Save the new student into the database</li>
 * <li>Cancel admission and remove the current student record</li>
 * </ul>
 * <p>
 * The class connects to the {@code finaleprojectdb} database to fetch and
 * insert records. It makes use of input validation utilities and interacts with
 * the {@code StudentForm} to display details of the admitted student.
 * 
 * @author Tomasz Touma
 * @version 1.0
 * @since 1.8
 */
public class AddStudentFrame extends javax.swing.JFrame {

    Student s;

    String url = "jdbc:mysql://127.0.0.1:3306/";
    //database name
    String dbName = "finaleprojectdb";
    //not needed for now

    String userName = "root";
    //password for connecting to local host
    String password = "root";
    Format formatter = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form AddStudentFrame
     */
    public AddStudentFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelStudentID = new javax.swing.JLabel();
        jTextFieldStudentID = new javax.swing.JTextField();
        jLabelSurname = new javax.swing.JLabel();
        jTextFieldSurname = new javax.swing.JTextField();
        jLabelPpsn = new javax.swing.JLabel();
        jTextFieldPpsn = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jLabelClassGroup = new javax.swing.JLabel();
        jLabelCourseName = new javax.swing.JLabel();
        jComboBoxCourseName = new javax.swing.JComboBox<>();
        jComboBoxClassGroup = new javax.swing.JComboBox<>();
        jLabelDateOfBirth = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jButtonCancel = new javax.swing.JButton();
        jButtonAdmit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Admission");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Admit new student"));

        jLabelStudentID.setText("Student ID:");

        jTextFieldStudentID.setEditable(false);
        jTextFieldStudentID.setEnabled(false);

        jLabelSurname.setText("Surname:");

        jTextFieldSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSurnameKeyTyped(evt);
            }
        });

        jLabelPpsn.setText("PPSN:");

        jTextFieldPpsn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPpsnKeyTyped(evt);
            }
        });

        jLabel4.setText("Gender:");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabelClassGroup.setText("Class Group:");

        jLabelCourseName.setText("Course Name:");

        jComboBoxCourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBoxCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCourseNameActionPerformed(evt);
            }
        });

        jLabelDateOfBirth.setText("Date of Birth:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPpsn)
                    .addComponent(jLabelSurname)
                    .addComponent(jLabel4)
                    .addComponent(jLabelStudentID)
                    .addComponent(jLabelClassGroup)
                    .addComponent(jLabelCourseName)
                    .addComponent(jLabelDateOfBirth))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxClassGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldPpsn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(jTextFieldSurname)))
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStudentID)
                    .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSurname)
                    .addComponent(jTextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPpsn)
                    .addComponent(jTextFieldPpsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDateOfBirth)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCourseName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelClassGroup, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxClassGroup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonAdmit.setText("Admit");
        jButtonAdmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAdmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCancel)
                .addGap(1, 1, 1))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonAdmit))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Resets the form to its default state by clearing input fields and
     * reloading the latest student ID.
     */
    public void resetState() {
        lastStudentID();
        jTextFieldStudentID.setText("");
        jTextFieldSurname.setText("");
        jTextFieldPpsn.setText("");
        jComboBoxCourseName.setSelectedItem(" ");
        jComboBoxClassGroup.setSelectedItem("");

    }

    /**
     * Fetches the highest student ID from the database and calculates the next
     * available student ID. The new ID is displayed in the student ID text
     * field.
     */
    public void lastStudentID() {
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT MAX(student_id) FROM student;";
            prest = con.prepareStatement(sql);
            ResultSet rs = prest.executeQuery();
            int maxStudentId = 0;

            if (rs.next()) {
                maxStudentId = rs.getInt(1);
            }

            // Calculate the next student ID
            int nextStudentId = maxStudentId + 1;

            // Display the next student ID in the jTextFieldStudentID
            jTextFieldStudentID.setText(String.valueOf(nextStudentId));

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }

    /**
     * Populates the course name combo box with values retrieved from the
     * 'course' table in the database.
     */
    private void setComboBoxCourseName() {
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT course_name FROM course";

            prest = con.prepareStatement(sql);

            ResultSet rs = prest.executeQuery();

            while (rs.next()) {
                jComboBoxCourseName.addItem(rs.getString(1));
            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }

    /**
     * Called when the window is opened. Loads the latest student ID and
     * populates the course name combo box.
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        lastStudentID();
        setComboBoxCourseName();

    }//GEN-LAST:event_formWindowOpened

    /**
     * Event handler for the Cancel button. Deletes the currently loaded student
     * record from the database and closes the window.
     */
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        try {
            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;
            try {
                String sql = "DELETE FROM student WHERE student_id = ?";
                prest = con.prepareStatement(sql);
                prest.setInt(1, s.getStudentID());

                int del = prest.executeUpdate();
                System.out.println("Number of deleted records: " + del);
                con.close();
            } catch (SQLException s) {
                System.out.println("SQL statement is not executed!");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * Event handler for surname text field key typing. Validates that only
     * letters are entered.
     */
    private void jTextFieldSurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSurnameKeyTyped
        ValidateLetter(evt);
    }//GEN-LAST:event_jTextFieldSurnameKeyTyped

    /**
     * Event handler for PPSN text field key typing. Validates that only digits
     * and letters are entered.
     */
    private void jTextFieldPpsnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPpsnKeyTyped
        ValidateDigitAndLetter(evt);
    }//GEN-LAST:event_jTextFieldPpsnKeyTyped

    /**
     * Event handler for the Admit button. Creates a new Student object with
     * entered details and inserts it into the database. Afterwards, opens the
     * StudentForm for the newly added student and closes the current form.
     */
    private void jButtonAdmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdmitActionPerformed
        s = new Student(validateInteger(jTextFieldStudentID.getText()),
                jTextFieldSurname.getText(), jTextFieldPpsn.getText(),
                (String) jComboBoxGender.getSelectedItem(), (String) jComboBoxClassGroup.getSelectedItem(), (String) jComboBoxCourseName.getSelectedItem(),
                 formatter.format(jDateChooser.getDate()));
        try {

            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;
            String sql = "INSERT INTO student(student_id,surname,ppsn,gender,class_group_code,date_of_birth)"
                    + " VALUES(?,?,?,?,?,?)";

            prest = conn.prepareStatement(sql);

            prest.setInt(1, s.getStudentID());
            prest.setString(2, s.getSurname());
            prest.setString(3, s.getPpsn());
            prest.setString(4, s.getGender());
            prest.setString(5, s.getClassGroupCode());
            prest.setString(6, s.getDob());

            prest.executeUpdate();
            prest.close();
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
        StudentForm s1 = new StudentForm(s.getStudentID());
        s1.setVisible(true);

        dispose();
    }//GEN-LAST:event_jButtonAdmitActionPerformed

    /**
     * Event handler for selecting a course name from the combo box. Fetches the
     * related class group codes from the database and updates the class group
     * combo box.
     */
    private void jComboBoxCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCourseNameActionPerformed
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT class_group_code FROM class_group WHERE course_name=?";

            prest = con.prepareStatement(sql);

            String selectedCourse = (String) jComboBoxCourseName.getSelectedItem();
            prest.setString(1, selectedCourse);
            ResultSet rs = prest.executeQuery();
            jComboBoxClassGroup.removeAllItems();
            jComboBoxClassGroup.addItem("");
            while (rs.next()) {
                jComboBoxClassGroup.addItem(rs.getString(1));
            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }//GEN-LAST:event_jComboBoxCourseNameActionPerformed

    /**
     * Called when the window is deactivated (loses focus). Resets the form and
     * reloads student ID and course data.
     */
    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
        setComboBoxCourseName();
        resetState();
        lastStudentID();

    }//GEN-LAST:event_formWindowDeactivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdmit;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JComboBox<String> jComboBoxClassGroup;
    private javax.swing.JComboBox<String> jComboBoxCourseName;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelClassGroup;
    private javax.swing.JLabel jLabelCourseName;
    private javax.swing.JLabel jLabelDateOfBirth;
    private javax.swing.JLabel jLabelPpsn;
    private javax.swing.JLabel jLabelStudentID;
    private javax.swing.JLabel jLabelSurname;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldPpsn;
    private javax.swing.JTextField jTextFieldStudentID;
    private javax.swing.JTextField jTextFieldSurname;
    // End of variables declaration//GEN-END:variables
}
