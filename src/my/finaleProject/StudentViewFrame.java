/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.finaleProject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static my.val.ValidationAndCalculationMethods.*;

/**
 * Represents a GUI frame for viewing and managing student records.
 * <p>
 * This frame allows users to:
 * <ul>
 * <li>Search students based on ID, name, class group, course, or gender.</li>
 * <li>View student details and open individual StudentForm frames.</li>
 * <li>View and edit student assessments via StudentAssessmentFrame.</li>
 * <li>Add new students using AddStudentFrame.</li>
 * <li>Print the list of students in a formatted report.</li>
 * <li>Clear search fields.</li>
 * </ul>
 * <p>
 * This frame interacts with a MySQL database and updates Swing components such
 * as JTable, JTextField, JComboBox, and JButtons.
 *
 * @author Tomasz Touma
 * @version 1.0
 * @since 1.8
 */
public class StudentViewFrame extends javax.swing.JFrame {

    String url = "jdbc:mysql://127.0.0.1:3306/";
    //database name
    String dbName = "finaleprojectdb";
    //not needed for now

    String userName = "root";
    //password for connecting to local host
    String password = "root";
    AddStudentFrame asf = new AddStudentFrame();

    /**
     * Creates new form StudentViewFrame
     */
    public StudentViewFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelSurname = new javax.swing.JLabel();
        jLabelFirstName = new javax.swing.JLabel();
        jTextFieldSurname = new javax.swing.JTextField();
        jTextFieldFirstName = new javax.swing.JTextField();
        jLabelStudentID = new javax.swing.JLabel();
        jLabelClassGroup = new javax.swing.JLabel();
        jTextFieldStudentID = new javax.swing.JTextField();
        jLabelCourseName = new javax.swing.JLabel();
        jComboBoxCourseName = new javax.swing.JComboBox<>();
        jLabelGender = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jComboBoxClassGroup = new javax.swing.JComboBox<>();
        jButtonClear = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jButtonAddStudent = new javax.swing.JButton();
        jButtonViewDetails = new javax.swing.JButton();
        jButtonViewAssessments = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStudents = new javax.swing.JTable();
        jButtonPrint = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Search");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search by Surname, First Name, StudentID, Gemder, Course Name, or Class Group (One at the time)"));
        jPanel1.setToolTipText("Enter the information for the student you want to find and click Search");

        jLabelSurname.setText("Surname:");

        jLabelFirstName.setText("First Name:");

        jTextFieldSurname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldSurnameKeyTyped(evt);
            }
        });

        jTextFieldFirstName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFirstNameKeyTyped(evt);
            }
        });

        jLabelStudentID.setText("StudentID:");

        jLabelClassGroup.setText("Class Group:");

        jTextFieldStudentID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldStudentIDKeyTyped(evt);
            }
        });

        jLabelCourseName.setText("Course Name:");

        jComboBoxCourseName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "(Select All)" }));
        jComboBoxCourseName.setSelectedItem(null);
        jComboBoxCourseName.setMaximumSize(new java.awt.Dimension(72, 22));
        jComboBoxCourseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCourseNameActionPerformed(evt);
            }
        });

        jLabelGender.setText("Gender:");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Male", "Female" }));
        jComboBoxGender.setSelectedItem(null);

        jComboBoxClassGroup.setMaximumSize(new java.awt.Dimension(72, 22));

        jButtonClear.setText("Clear Fields");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSurname)
                    .addComponent(jLabelFirstName))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(jTextFieldSurname))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStudentID)
                    .addComponent(jLabelGender))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelClassGroup)
                    .addComponent(jLabelCourseName))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxCourseName, 0, 338, Short.MAX_VALUE)
                    .addComponent(jComboBoxClassGroup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonClear))
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSurname)
                    .addComponent(jTextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStudentID)
                    .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCourseName)
                    .addComponent(jComboBoxCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirstName)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelClassGroup)
                    .addComponent(jLabelGender)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxClassGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonClear))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jButtonAddStudent.setText("Add Student");
        jButtonAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddStudentActionPerformed(evt);
            }
        });

        jButtonViewDetails.setText("Edit/View Details");
        jButtonViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewDetailsActionPerformed(evt);
            }
        });

        jButtonViewAssessments.setText("Edit/View Assessment");
        jButtonViewAssessments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewAssessmentsActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose a student you want to work with, then select an action from the buttons below."));

        jTableStudents.setAutoCreateRowSorter(true);
        jTableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "StudentID", "Surname", "First Name", "Gender", "Class Group", "Course Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableStudents.setMaximumSize(new java.awt.Dimension(190, 20));
        jTableStudents.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableStudents);
        if (jTableStudents.getColumnModel().getColumnCount() > 0) {
            jTableStudents.getColumnModel().getColumn(0).setResizable(false);
            jTableStudents.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableStudents.getColumnModel().getColumn(1).setResizable(false);
            jTableStudents.getColumnModel().getColumn(2).setResizable(false);
            jTableStudents.getColumnModel().getColumn(3).setResizable(false);
            jTableStudents.getColumnModel().getColumn(3).setPreferredWidth(5);
            jTableStudents.getColumnModel().getColumn(4).setResizable(false);
            jTableStudents.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTableStudents.getColumnModel().getColumn(5).setResizable(false);
            jTableStudents.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonPrint.setText("Print");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAddStudent)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonViewAssessments)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonViewDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonClose)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClose)
                    .addComponent(jButtonAddStudent)
                    .addComponent(jButtonViewDetails)
                    .addComponent(jButtonViewAssessments)
                    .addComponent(jButtonPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Performs a student search based on selected filters or shows all
     * students.
     *
     * @param evt the action event
     */
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String selectedOption = (String) jComboBoxCourseName.getSelectedItem();
        if ("(Select All)".equals(selectedOption)) {
            try {

                Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
                PreparedStatement prest = null;

                String sql = "SELECT student.student_id,student.surname,student.first_name,student.gender,student.class_group_code,class_group.course_name "
                        + "FROM class_group INNER JOIN student ON class_group.class_group_code=student.class_group_code ";
                prest = con.prepareStatement(sql);

                ResultSet rs = prest.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTableStudents.getModel();
                model.setRowCount(0);
                while (rs.next()) {
                    model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                }

            } catch (SQLException err) {

                System.out.println(err.getMessage());

            }
        } else {
            try {

                Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
                PreparedStatement prest = null;

                String sql = "SELECT student.student_id,student.surname,student.first_name,student.gender,student.class_group_code,class_group.course_name "
                        + "FROM class_group INNER JOIN student ON class_group.class_group_code=student.class_group_code "
                        + "WHERE student.surname=? OR student.first_name=? "
                        + "OR student.student_id=? OR student.class_group_code=? OR class_group.course_name=? OR student.gender=?";

                prest = con.prepareStatement(sql);
                prest.setString(1, jTextFieldSurname.getText());
                prest.setString(2, jTextFieldFirstName.getText());
                prest.setString(3, jTextFieldStudentID.getText());
                prest.setString(4, (String) jComboBoxClassGroup.getSelectedItem());
                prest.setString(5, (String) jComboBoxCourseName.getSelectedItem());
                prest.setString(6, (String) jComboBoxGender.getSelectedItem());

                ResultSet rs = prest.executeQuery();
                DefaultTableModel model = (DefaultTableModel) jTableStudents.getModel();
                model.setRowCount(0);
                while (rs.next()) {
                    model.addRow(new String[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                }

            } catch (SQLException err) {

                System.out.println(err.getMessage());

            }
        }

    }//GEN-LAST:event_jButtonSearchActionPerformed

    /**
     * Ensures that only letters are typed into the surname text field.
     *
     * @param evt the key event
     */
    private void jTextFieldSurnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSurnameKeyTyped
        ValidateLetter(evt);
    }//GEN-LAST:event_jTextFieldSurnameKeyTyped

    private void jTextFieldFirstNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFirstNameKeyTyped
        ValidateLetter(evt);
    }//GEN-LAST:event_jTextFieldFirstNameKeyTyped

    private void jTextFieldStudentIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldStudentIDKeyTyped
        ValidateDigit(evt);
    }//GEN-LAST:event_jTextFieldStudentIDKeyTyped

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        dispose();

    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddStudentActionPerformed
        asf.setVisible(true);
    }//GEN-LAST:event_jButtonAddStudentActionPerformed

    /**
     * Loads all available courses into the course combo box when the frame
     * opens.
     *
     * @param evt the window event
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT course_name FROM course";

            prest = con.prepareStatement(sql);

            ResultSet rs = prest.executeQuery();

            while (rs.next()) {
                jComboBoxCourseName.addItem(rs.getString(1));
            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * Updates the class group combo box based on the selected course.
     *
     * @param evt the action event
     */
    private void jComboBoxCourseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCourseNameActionPerformed
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT class_group_code FROM class_group WHERE course_name=?";

            prest = con.prepareStatement(sql);

            String selectedCourse = (String) jComboBoxCourseName.getSelectedItem();
            prest.setString(1, selectedCourse);
            ResultSet rs = prest.executeQuery();
            jComboBoxClassGroup.removeAllItems();
            jComboBoxClassGroup.addItem("");
            while (rs.next()) {
                jComboBoxClassGroup.addItem(rs.getString(1));
            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }//GEN-LAST:event_jComboBoxCourseNameActionPerformed

    /**
     * Opens a StudentForm frame to view details of the selected student.
     *
     * @param evt the action event
     */
    private void jButtonViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewDetailsActionPerformed
        int selectedRow = jTableStudents.getSelectedRow();
        if (selectedRow != -1) {
            Object value = jTableStudents.getValueAt(selectedRow, 0);
            try {
                int studentID = Integer.parseInt((String) value);
                StudentForm s1 = new StudentForm(studentID);
                s1.setVisible(true);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid student ID format.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a student.");
        }
    }//GEN-LAST:event_jButtonViewDetailsActionPerformed

    /**
     * Opens a StudentAssessmentFrame to view or edit assessments for the
     * selected student.
     *
     * @param evt the action event
     */
    private void jButtonViewAssessmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewAssessmentsActionPerformed
        int selectedRow = jTableStudents.getSelectedRow();
        if (selectedRow != -1) { // Check if a row is selected
            Object value = jTableStudents.getValueAt(selectedRow, 0);
            try {
                int studentID = Integer.parseInt((String) value);
                StudentAssessmentFrame saf1 = new StudentAssessmentFrame(studentID);
                saf1.setVisible(true);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid StudentID format.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a student.");
        }
    }//GEN-LAST:event_jButtonViewAssessmentsActionPerformed

    /**
     * Clears all search and filter fields in the frame.
     *
     * @param evt the action event
     */
    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        jTextFieldSurname.setText("");
        jTextFieldFirstName.setText("");
        jTextFieldStudentID.setText("");
        jComboBoxGender.setSelectedItem(" ");
        jComboBoxCourseName.setSelectedItem(" ");
    }//GEN-LAST:event_jButtonClearActionPerformed

    /**
     * Prints the list of students displayed in the JTable in a formatted
     * PrintFrame.
     *
     * @param evt the action event
     */
    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        PrintFrame spf = new PrintFrame();

        DefaultTableModel model = (DefaultTableModel) jTableStudents.getModel();
        spf.jTextAreaPrint.setText(spf.jTextAreaPrint.getText() + "StudentID" + "\t" + "Surname" + "\t" + "First name" + "\t" + "Gender" + "\t" + "Class Group" + "\t" + "Course Name" + "\n" + "\n");
        for (int i = 0; i < jTableStudents.getRowCount(); i++) {
            String studentID = jTableStudents.getValueAt(i, 0).toString();
            String surname = jTableStudents.getValueAt(i, 1).toString();
            String firstName = jTableStudents.getValueAt(i, 2).toString();
            String gender = jTableStudents.getValueAt(i, 3).toString();
            String classGroup = jTableStudents.getValueAt(i, 4).toString();
            String courseName = jTableStudents.getValueAt(i, 5).toString();
            spf.jTextAreaPrint.setText(spf.jTextAreaPrint.getText() + studentID + "\t" + surname + "\t" + firstName + "\t" + gender + "\t" + classGroup + "\t" + courseName + "\n");
            spf.setVisible(true);
        }

    }//GEN-LAST:event_jButtonPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentViewFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddStudent;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonViewAssessments;
    private javax.swing.JButton jButtonViewDetails;
    private javax.swing.JComboBox<String> jComboBoxClassGroup;
    private javax.swing.JComboBox<String> jComboBoxCourseName;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelClassGroup;
    private javax.swing.JLabel jLabelCourseName;
    private javax.swing.JLabel jLabelFirstName;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelStudentID;
    private javax.swing.JLabel jLabelSurname;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableStudents;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldStudentID;
    private javax.swing.JTextField jTextFieldSurname;
    // End of variables declaration//GEN-END:variables
}
