/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.finaleProject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import static my.val.ValidationAndCalculationMethods.showTimedMessage;

/**
 *
 * @author Tomasz Touma
 * @version 1.0
 * @since 1.8
 *
 * <b>LoginFrame</b> is a GUI class that provides a login interface for users.
 * It connects to a MySQL database and validates the provided username and
 * password.
 *
 * The frame allows authentication by comparing input credentials with those
 * stored in the database, showing appropriate success or error messages to the
 * user.
 * 
 *      TEST CREDENTIALS 
 * Admin: username: admin
 *        password: admin
 * STAFF: username: emily.murphy@example.com
 *        password: staff
 *
 * @see javax.swing.JFrame
 * @see java.sql.Connection
 * @see java.sql.PreparedStatement
 * @see java.sql.ResultSet
 */
public class LoginFrame extends javax.swing.JFrame {

    String url = "jdbc:mysql://127.0.0.1:3306/";
    //database name
    String dbName = "finaleprojectdb";
    //not needed for now

    String userName = "root";
    //password for connecting to local host
    String password = "root";

    /**
     * Creates new form LoginFrame
     */
    public LoginFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jButtonLogin = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Please Login");

        jLabelEmail.setText("Email:");

        jLabelPassword.setText("Password:");

        jButtonLogin.setText("Login");
        jButtonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginActionPerformed(evt);
            }
        });

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonLogin))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPassword)
                            .addComponent(jLabelEmail))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(jPasswordFieldPassword))))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPassword)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLogin)
                    .addComponent(jButtonClose))
                .addGap(28, 28, 28))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the login button action event.
     * <p>
     * This method retrieves the email and password entered by the user and
     * performs authentication. If the credentials are "admin"/"admin", the
     * admin interface is launched. Otherwise, the method connects to the MySQL
     * database and validates the staff login by checking the email and
     * password.
     * </p>
     *
     * <ul>
     * <li>On successful login, the appropriate main form (Admin or Staff) is
     * displayed.</li>
     * <li>If the credentials are invalid, the user is notified with an error
     * message.</li>
     * </ul>
     *
     * @param evt the ActionEvent triggered when the login button is pressed
     *
     * @see AdminMainForm
     * @see StaffMainForm
     * @see java.sql.Connection
     * @see java.sql.PreparedStatement
     * @see java.sql.ResultSet
     */
    private void jButtonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginActionPerformed
        String staffEmail = jTextFieldEmail.getText();
        String StaffPassword = jPasswordFieldPassword.getText();

        if (staffEmail.equalsIgnoreCase("admin") && StaffPassword.equals("admin")) {

            showTimedMessage(null, "Logging in...", "Valid Admin log in", JOptionPane.INFORMATION_MESSAGE, 2000);           
            jTextFieldEmail.setText("");
            jPasswordFieldPassword.setText("");
            AdminMainForm amf = new AdminMainForm();
            amf.setVisible(true);
            dispose();

        } else {
            try {

                Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
                PreparedStatement prest = null;

                String sql = "SELECT email FROM staff WHERE email = ?";
                prest = con.prepareStatement(sql);
                prest.setString(1, staffEmail);

                ResultSet rs = prest.executeQuery();
                if (rs.next()) {
                    // Email exists in the database
                    String email = rs.getString("email");

                    // Check password (assuming all passwords are the same)
                    if (StaffPassword.equals("staff")) {
                        showTimedMessage(null, "Logging in...", "Valid Staff log in", JOptionPane.INFORMATION_MESSAGE, 2000);
                        StaffMainForm smf = new StaffMainForm();
                        smf.setVisible(true);
                        dispose();
                    } else {
                        // Invalid password
                        JOptionPane.showMessageDialog(null, "Invalid Password", "Invalid log in", JOptionPane.ERROR_MESSAGE);
                        jPasswordFieldPassword.setText("");
                    }
                } else {
                    // Email does not exist in the database
                    JOptionPane.showMessageDialog(null, "Invalid Username", "Invalid log in", JOptionPane.ERROR_MESSAGE);
                    jTextFieldEmail.setText("");
                    jPasswordFieldPassword.setText("");
                }

                rs.close();
                prest.close();
                con.close();
            } catch (SQLException err) {

                System.out.println(err.getMessage());

            }
        }


    }//GEN-LAST:event_jButtonLoginActionPerformed

    /**
     * Handles the close button action event.
     * <p>
     * This method disposes of the current login frame, effectively closing it.
     * </p>
     *
     * @param evt the ActionEvent triggered when the close button is pressed
     */
    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JTextField jTextFieldEmail;
    // End of variables declaration//GEN-END:variables
}
