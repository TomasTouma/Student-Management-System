/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.finaleProject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;
import static my.val.ValidationAndCalculationMethods.*;

/**
 * StudentAssessmentFrame class
 *
 * Purpose: This JFrame provides a graphical user interface to view, edit,
 * calculate, and print assessment results for a particular student. It
 * interacts with the database to fetch student details, modules, and assessment
 * scores.
 *
 * Main Responsibilities: 1. Display student personal details (name and course)
 * and modules. 2. Load assessment scores (assignment 1, assignment 2, exam, and
 * result) for a selected module. 3. Allow the user to calculate the final
 * result based on assessment scores. 4. Save or update assessment scores back
 * to the database. 5. Print assessment details for all modules or a specific
 * module in a formatted way using PrintFrame. 6. Validate inputs to ensure they
 * are numeric and within a valid range (0â€“100).
 *
 * Key Features: - Database connectivity for retrieving and updating
 * student/module/assessment data. - Input validation for assignments and exam
 * scores. - Dynamic module selection via a JComboBox. - Printing functionality
 * with formatted alignment. - User-friendly GUI with buttons for save,
 * calculate results, close, and print.
 *
 * Dependencies: - Uses JDBC for MySQL database connectivity. - Relies on a
 * Student class for calculation and data encapsulation. - Relies on PrintFrame
 * class to display printable information.
 *
 * @author Tomasz Touma
 * @version 1.0
 * @since 1.8
 */
public class StudentAssessmentFrame extends javax.swing.JFrame {

    private int studentID;
    Student s;
    String url = "jdbc:mysql://127.0.0.1:3306/";
    //database name
    String dbName = "finaleprojectdb";
    //not needed for now

    String userName = "root";
    //password for connecting to local host
    String password = "root";

    /**
     * Creates new form StudentAssessmentFrame
     */
    public StudentAssessmentFrame() {
        initComponents();

    }

    public StudentAssessmentFrame(int studentID) {
        initComponents();
        this.studentID = studentID;
        jTextFieldStudentID.setText(String.valueOf(studentID));
        loadStudentDetails();

    }

    /**
     * Loads student details (name, course, and modules) into the frame based on
     * the studentID. Populates the name field, course name field, and module
     * combo box.
     */
    private void loadStudentDetails() {
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            String sql = "SELECT student.first_name,student.surname,course.course_name,module.module_name FROM student"
                    + " INNER JOIN class_group ON student.class_group_code=class_group.class_group_code"
                    + " INNER JOIN course ON class_group.course_code=course.course_code"
                    + " INNER JOIN module ON course.course_code=module.course_code WHERE student.student_id=?";

            PreparedStatement prest = con.prepareStatement(sql);
            prest.setInt(1, studentID);

            ResultSet rs = prest.executeQuery();

            while (rs.next()) {

                jTextFieldName.setText(rs.getString("first_name") + " " + rs.getString("surname"));
                jTextFieldCourseName.setText(rs.getString("course_name"));
                jComboBoxModule.addItem(rs.getString("module_name"));

            }

            rs.close();
            prest.close();
        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }

    /**
     * Validates that the input string represents a number between 0 and 100.
     * Returns true if valid, false otherwise.
     */
    private boolean isValidInput(String input) {
        try {
            int value = Integer.parseInt(input);
            return value >= 0 && value <= 100;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private String padString(String input, int width) {
        return String.format("%-" + width + "s", input);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelStudentID = new javax.swing.JLabel();
        jTextFieldStudentID = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelCourseName = new javax.swing.JLabel();
        jTextFieldCourseName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabelExam = new javax.swing.JLabel();
        jTextFieldExam = new javax.swing.JTextField();
        jComboBoxModule = new javax.swing.JComboBox<>();
        jLabelModule = new javax.swing.JLabel();
        jLabelAssignment1 = new javax.swing.JLabel();
        jTextFieldAssignment2 = new javax.swing.JTextField();
        jTextFieldAssignment1 = new javax.swing.JTextField();
        jLabelAssignment2 = new javax.swing.JLabel();
        jLabelResults = new javax.swing.JLabel();
        jTextFieldResults1 = new javax.swing.JTextField();
        jButtonResults = new javax.swing.JButton();
        jTextFieldResults2 = new javax.swing.JTextField();
        jButtonPrintModule = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Student Information"));

        jLabelStudentID.setText("StudentID:");

        jTextFieldStudentID.setEditable(false);
        jTextFieldStudentID.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldStudentID.setEnabled(false);

        jLabelName.setText("Name:");

        jTextFieldName.setEditable(false);
        jTextFieldName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldName.setEnabled(false);

        jLabelCourseName.setText("Course Name:");

        jTextFieldCourseName.setEditable(false);
        jTextFieldCourseName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldCourseName.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelCourseName)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelStudentID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabelName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldName)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelName)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelStudentID))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCourseName)
                    .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Click Save in case of any changes"));

        jLabelExam.setText("Exam:");

        jTextFieldExam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldExamKeyTyped(evt);
            }
        });

        jComboBoxModule.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBoxModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModuleActionPerformed(evt);
            }
        });

        jLabelModule.setText("Module:");

        jLabelAssignment1.setText("Assignment 1:");

        jTextFieldAssignment2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAssignment2KeyTyped(evt);
            }
        });

        jTextFieldAssignment1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldAssignment1KeyTyped(evt);
            }
        });

        jLabelAssignment2.setText("Assignment 2:");

        jLabelResults.setText("Results:");

        jTextFieldResults1.setEditable(false);
        jTextFieldResults1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldResults1.setEnabled(false);

        jButtonResults.setText("Calculate Results");
        jButtonResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResultsActionPerformed(evt);
            }
        });

        jTextFieldResults2.setEditable(false);
        jTextFieldResults2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldResults2.setEnabled(false);

        jButtonPrintModule.setText("Print Module");
        jButtonPrintModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintModuleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelModule)
                        .addGap(26, 26, 26)
                        .addComponent(jComboBoxModule, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelAssignment1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldAssignment1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelAssignment2)
                                    .addComponent(jLabelExam)
                                    .addComponent(jLabelResults))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldResults2)
                                    .addComponent(jTextFieldAssignment2)
                                    .addComponent(jTextFieldExam)
                                    .addComponent(jTextFieldResults1))))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonResults)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jButtonPrintModule)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModule)
                    .addComponent(jComboBoxModule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAssignment1)
                    .addComponent(jTextFieldAssignment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPrintModule))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAssignment2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAssignment2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldExam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelResults)
                    .addComponent(jTextFieldResults1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonResults))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldResults2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonPrint.setText("Print all Modules");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonPrint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClose)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClose)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonPrint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Loads assessment details (assignments, exam, result) for the selected
     * module from the database and populates the text fields.
     */
    private void jComboBoxModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModuleActionPerformed
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT assessment.assignment_1,assessment.assignment_2,assessment.exam,assessment.result FROM student "
                    + "INNER JOIN class_group ON student.class_group_code=class_group.class_group_code "
                    + "INNER JOIN course ON class_group.course_code=course.course_code "
                    + "INNER JOIN module ON course.course_code=module.course_code "
                    + "INNER JOIN assessment ON module.module_code=assessment.module_code WHERE student.student_id=? AND module.module_name=?";

            prest = con.prepareStatement(sql);

            prest.setInt(1, studentID);
            prest.setString(2, (String) jComboBoxModule.getSelectedItem());
            ResultSet rs = prest.executeQuery();
            while (rs.next()) {
                jTextFieldAssignment1.setText(rs.getString("assignment_1"));
                jTextFieldAssignment2.setText(rs.getString("assignment_2"));
                jTextFieldExam.setText(rs.getString("exam"));
                jTextFieldResults1.setText(rs.getString("result"));
                jTextFieldResults2.setText("");

            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }//GEN-LAST:event_jComboBoxModuleActionPerformed

    /**
     * Saves or updates the assessment scores (assignment1, assignment2, exam,
     * result) for the student and selected module in the database.
     */
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        s = new Student(validateInteger(jTextFieldAssignment1.getText()), validateInteger(jTextFieldAssignment2.getText()),
                validateInteger(jTextFieldExam.getText()), validateInteger(jTextFieldResults1.getText()), jTextFieldCourseName.getText(),
                (String) jComboBoxModule.getSelectedItem(), validateInteger(jTextFieldStudentID.getText()));

        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "UPDATE assessment SET assignment_1 = ?, assignment_2 = ?, exam = ?, result= ? "
                    + "WHERE module_code IN (SELECT module_code FROM module WHERE course_code IN "
                    + "(SELECT course_code FROM course WHERE course_name = ?)) "
                    + "AND module_code IN (SELECT module_code FROM module WHERE module_name = ?) "
                    + "AND assessment_id IN (SELECT assessment_id FROM student WHERE student_id = ?)";

            prest = con.prepareStatement(sql);
            prest.setInt(1, s.getAssignment1());
            prest.setInt(2, s.getAssignment2());
            prest.setInt(3, s.getExam());
            prest.setInt(4, s.getResults());
            prest.setString(5, s.getCourseName());
            prest.setString(6, s.getModuleName());
            prest.setInt(7, s.getStudentID());
            prest.executeUpdate();

            prest.close();
            con.close();
            JOptionPane.showMessageDialog(null, "assessment have been added/updated successfully",
                    "Task complite", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * Calculates the final result based on assignment and exam scores and
     * displays it in the results text fields.
     */
    private void jButtonResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResultsActionPerformed
        s = new Student(validateInteger(jTextFieldAssignment1.getText()), validateInteger(jTextFieldAssignment2.getText()),
                validateInteger(jTextFieldExam.getText()));

        jTextFieldResults1.setText(Integer.toString(s.calculateResult()));
        jTextFieldResults2.setText(s.calculateResult2());
    }//GEN-LAST:event_jButtonResultsActionPerformed

    /**
     * Ensures that the input for Assignment 1 is a valid number between 0-100
     * and only digits (or decimal) are allowed.
     */
    private void jTextFieldAssignment1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAssignment1KeyTyped
        char keyTyped = evt.getKeyChar();
        if (!(Character.isDigit(keyTyped) || isDot(keyTyped))) {

            evt.consume();
        }
        String text = jTextFieldAssignment1.getText() + keyTyped;
        if (!isValidInput(text)) {
            evt.consume();  // Ignore the input
        }
    }//GEN-LAST:event_jTextFieldAssignment1KeyTyped

    /**
     * Ensures that the input for Assignment 2 is a valid number between 0-100
     * and only digits (or decimal) are allowed.
     */
    private void jTextFieldAssignment2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAssignment2KeyTyped
        char keyTyped = evt.getKeyChar();
        if (!(Character.isDigit(keyTyped) || isDot(keyTyped))) {

            evt.consume();
        }
        String text = jTextFieldAssignment2.getText() + keyTyped;
        if (!isValidInput(text)) {
            evt.consume();  // Ignore the input
        }
    }//GEN-LAST:event_jTextFieldAssignment2KeyTyped

    /**
     * Ensures that the input for Exam is a valid number between 0-100 and only
     * digits (or decimal) are allowed.
     */
    private void jTextFieldExamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldExamKeyTyped
        char keyTyped = evt.getKeyChar();
        if (!(Character.isDigit(keyTyped) || isDot(keyTyped))) {

            evt.consume();
        }
        String text = jTextFieldExam.getText() + keyTyped;
        if (!isValidInput(text)) {
            evt.consume();  // Ignore the input
        }
    }//GEN-LAST:event_jTextFieldExamKeyTyped

    /**
     * Closes the StudentAssessmentFrame window.
     */
    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    /**
     * Prints all assessments for the student across all modules to a
     * PrintFrame, formatting them into a readable table.
     */
    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed

        PrintFrame spf = new PrintFrame();
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT module.module_name,assessment.assignment_1,assessment.assignment_2,assessment.exam,assessment.result FROM student  "
                    + "INNER JOIN class_group ON student.class_group_code=class_group.class_group_code "
                    + "INNER JOIN course ON class_group.course_code=course.course_code  "
                    + "INNER JOIN module ON course.course_code=module.course_code "
                    + "INNER JOIN assessment ON module.module_code=assessment.module_code WHERE student.student_id=?";

            prest = con.prepareStatement(sql);

            prest.setInt(1, studentID);

            ResultSet rs = prest.executeQuery();
            spf.jTextAreaPrint.setText("Name: " + jTextFieldName.getText() + "\t" + "StudentID: " + jTextFieldStudentID.getText() + "\n" + "\n"
                    + "Module Name" + "\t\t" + "Assignment 1" + "\t\t" + "Assignment 2" + "\t\t" + "Exam" + "\t\t" + "Finale Results" + "\n");
            while (rs.next()) {
                String moduleName = rs.getString("module_name");
                String assignment1 = rs.getString("assignment_1");
                String assignment2 = rs.getString("assignment_2");
                String exam = rs.getString("exam");
                String result = rs.getString("result");

                // Padding each string to ensure alignment
                moduleName = padString(moduleName, 40);
                assignment1 = padString(assignment1, 40);
                assignment2 = padString(assignment2, 40);
                exam = padString(exam, 40);
                result = padString(result, 40);

                // Append the formatted data to the JTextAreaPrint
                spf.jTextAreaPrint.append(moduleName + assignment1 + assignment2 + exam + result + "\n");
            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
        spf.setVisible(true);
    }//GEN-LAST:event_jButtonPrintActionPerformed

    /**
     * Prints the assessment for the selected module for the student to a
     * PrintFrame, formatting the data for readability.
     */
    private void jButtonPrintModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintModuleActionPerformed
        PrintFrame spf = new PrintFrame();
        try {

            Connection con = (Connection) DriverManager.getConnection(url + dbName, userName, password);
            PreparedStatement prest = null;

            String sql = "SELECT module.module_name,assessment.assignment_1,assessment.assignment_2,assessment.exam,assessment.result FROM student  "
                    + "INNER JOIN class_group ON student.class_group_code=class_group.class_group_code "
                    + "INNER JOIN course ON class_group.course_code=course.course_code  "
                    + "INNER JOIN module ON course.course_code=module.course_code "
                    + "INNER JOIN assessment ON module.module_code=assessment.module_code"
                    + " WHERE student.student_id=? AND module_name = ?";

            prest = con.prepareStatement(sql);

            prest.setInt(1, studentID);
            prest.setString(2, (String) jComboBoxModule.getSelectedItem());

            ResultSet rs = prest.executeQuery();
            spf.jTextAreaPrint.setText("Name: " + jTextFieldName.getText() + "\t" + "StudentID: " + jTextFieldStudentID.getText() + "\n" + "\n"
                    + "Module Name" + "\t\t" + "Assignment 1" + "\t\t" + "Assignment 2" + "\t\t" + "Exam" + "\t\t" + "Finale Results" + "\n");
            while (rs.next()) {
                String moduleName = rs.getString("module_name");
                String assignment1 = rs.getString("assignment_1");
                String assignment2 = rs.getString("assignment_2");
                String exam = rs.getString("exam");
                String result = rs.getString("result");

                // Padding each string to ensure alignment
                moduleName = padString(moduleName, 40);
                assignment1 = padString(assignment1, 50);
                assignment2 = padString(assignment2, 40);
                exam = padString(exam, 50);
                result = padString(result, 50);

                // Append the formatted data to the JTextAreaPrint
                spf.jTextAreaPrint.append(moduleName + assignment1 + assignment2 + exam + result + "\n");

            }

        } catch (SQLException err) {

            System.out.println(err.getMessage());

        }
        spf.setVisible(true);
    }//GEN-LAST:event_jButtonPrintModuleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAssessmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAssessmentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonPrintModule;
    private javax.swing.JButton jButtonResults;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxModule;
    private javax.swing.JLabel jLabelAssignment1;
    private javax.swing.JLabel jLabelAssignment2;
    private javax.swing.JLabel jLabelCourseName;
    private javax.swing.JLabel jLabelExam;
    private javax.swing.JLabel jLabelModule;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelResults;
    private javax.swing.JLabel jLabelStudentID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldAssignment1;
    private javax.swing.JTextField jTextFieldAssignment2;
    private javax.swing.JTextField jTextFieldCourseName;
    private javax.swing.JTextField jTextFieldExam;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldResults1;
    private javax.swing.JTextField jTextFieldResults2;
    private javax.swing.JTextField jTextFieldStudentID;
    // End of variables declaration//GEN-END:variables
}
